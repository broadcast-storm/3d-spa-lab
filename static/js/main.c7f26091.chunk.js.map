{"version":3,"sources":["components/Header/styles.module.scss","components/Header/Header.jsx","models/Johnny.js","App.jsx","index.js"],"names":["module","exports","Header","className","styles","header","name","author","Model","props","group","useRef","useGLTF","process","nodes","materials","animations","actions","useAnimations","useEffect","dance","play","ref","dispose","rotation","Math","PI","scale","object","mixamorigHips","geometry","Mesh","material","Ch42_Body","skeleton","castShadow","Mesh_1","Ch42_Hair","preload","softShadows","App","textOptions","font","THREE","parse","Roboto","size","height","shadows","camera","position","fov","attach","args","OrbitControls","enablePan","enableZoom","minPolarAngle","maxPolarAngle","target","color","intensity","distance","skyColor","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-near","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","fallback","receiveShadow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,yB,8k8UCUxEC,MATf,WACG,OACG,sBAAKC,UAAWC,IAAOC,OAAvB,UACG,oBAAIF,UAAWC,IAAOE,KAAtB,8BACA,sBAAMH,UAAWC,IAAOG,OAAxB,sC,uBCCM,SAASC,EAAMC,GAC3B,IAAMC,EAAQC,mBACd,EAAyCC,YAAQ,GAAD,OAAIC,cAAJ,gBAAxCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,WAClBC,EAAYC,YAAcF,EAAYN,GAAtCO,QAIR,OAHAE,qBAAU,WACPF,EAAQG,MAAMC,UAGd,+CAAOC,IAAKZ,GAAWD,GAAvB,IAA8Bc,QAAS,KAAvC,SACG,wBAAOC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAAIC,MAAO,CAAC,IAAM,IAAM,KAA1D,UACG,2BAAWC,OAAQd,EAAMe,gBACzB,6BACGC,SAAUhB,EAAMiB,KAAKD,SACrBE,SAAUjB,EAAUkB,UACpBC,SAAUpB,EAAMiB,KAAKG,SACrBC,YAAU,IAEb,6BACGL,SAAUhB,EAAMsB,OAAON,SACvBE,SAAUjB,EAAUsB,UACpBH,SAAUpB,EAAMsB,OAAOF,iBAOtCtB,IAAQ0B,QAAR,UAAmBzB,cAAnB,gB,YC1BA0B,cAqEeC,MAnEf,WACG,IAEMC,EAAc,CACjBC,MAHU,IAAIC,cAAmBC,MAAMC,GAIvCC,KAAM,EACNC,OAAQ,IAGX,OACG,qCACG,cAAC,EAAD,IACA,eAAC,IAAD,CAAQC,SAAO,EAACC,OAAQ,CAAEC,SAAU,CAAC,EAAG,IAAM,GAAIC,IAAK,IAAvD,UACG,uBAAOC,OAAO,aAAaC,KAAM,CAAC,aAClC,qBAAKD,OAAO,MAAMC,KAAM,CAAC,UAAW,GAAI,OAExC,cAACC,EAAA,EAAD,CACGC,WAAW,EACXC,YAAY,EACZC,cAAehC,KAAKC,GAAK,EACzBgC,cAAejC,KAAKC,GAAK,IACzBiC,OAAQ,CAAC,EAAG,EAAG,KAGlB,kCACG,4BAAYT,SAAU,CAAC,EAAG,EAAG,GAAIU,MAAM,MAAMC,UAAW,GAAKC,SAAU,KACvE,iCAAiBC,SAAS,OAAOF,UAAW,KAC5C,kCACGX,SAAU,CAAC,EAAG,EAAG,GACjBW,UAAW,EACXD,MAAM,SACNI,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,qBAAoB,GACpBC,sBAAqB,EACrBC,sBAAqB,EACrBC,oBAAmB,EACnBC,wBAAuB,EACvBpC,YAAU,OAIhB,kCACG,cAAC,WAAD,CACGqC,SACG,uBAAM7C,MAAO,IAAMuB,SAAU,EAAE,GAAK,EAAG,GAAvC,UACG,8BACGE,OAAO,WACPC,KAAM,CAAC,2FAAsBZ,KAEhC,sCAAsBW,OAAO,gBAPtC,SAWG,cAAC,EAAD,MAEH,uBAAMzB,MAAO,IAAKuB,SAAU,CAAC,EAAG,EAAG,GAAI1B,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAI+C,eAAa,EAApF,UACG,kCACA,mCAAmBb,MAAM,sB,MChE3Cc,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.c7f26091.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__36MAJ\",\"name\":\"styles_name__3OsaE\",\"author\":\"styles_author__1Y3y1\"};","import styles from './styles.module.scss'\r\n\r\nfunction Header() {\r\n   return (\r\n      <div className={styles.header}>\r\n         <h1 className={styles.name}>Dance Revolution</h1>\r\n         <span className={styles.author}>by Nikita Pozdnyakov</span>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Header\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF, useAnimations } from '@react-three/drei'\n\nexport default function Model(props) {\n   const group = useRef()\n   const { nodes, materials, animations } = useGLTF(`${process.env.PUBLIC_URL}/johnny.glb`)\n   const { actions } = useAnimations(animations, group)\n   useEffect(() => {\n      actions.dance.play()\n   })\n   return (\n      <group ref={group} {...props} dispose={null}>\n         <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n            <primitive object={nodes.mixamorigHips} />\n            <skinnedMesh\n               geometry={nodes.Mesh.geometry}\n               material={materials.Ch42_Body}\n               skeleton={nodes.Mesh.skeleton}\n               castShadow\n            />\n            <skinnedMesh\n               geometry={nodes.Mesh_1.geometry}\n               material={materials.Ch42_Hair}\n               skeleton={nodes.Mesh_1.skeleton}\n            />\n         </group>\n      </group>\n   )\n}\n\nuseGLTF.preload(`${process.env.PUBLIC_URL}/jhonny.glb`)\n","import { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls, softShadows } from '@react-three/drei'\nimport * as THREE from 'three'\nimport Header from './components/Header/Header'\nimport Johnny from './models/Johnny'\nimport Roboto from './fonts/roboto.json'\n\nsoftShadows()\n\nfunction App() {\n   const font = new THREE.FontLoader().parse(Roboto)\n\n   const textOptions = {\n      font,\n      size: 1,\n      height: 0.5,\n   }\n\n   return (\n      <>\n         <Header />\n         <Canvas shadows camera={{ position: [0, 0.02, 3], fov: 35 }}>\n            <color attach=\"background\" args={['#b7b7b7']} />\n            <fog attach=\"fog\" args={['#b7b7b7', 50, 100]} />\n\n            <OrbitControls\n               enablePan={false}\n               enableZoom={false}\n               minPolarAngle={Math.PI / 6}\n               maxPolarAngle={Math.PI / 2.1}\n               target={[0, 1, 0]}\n            />\n\n            <group>\n               <pointLight position={[0, 2, 0]} color=\"red\" intensity={0.8} distance={10} />\n               <hemisphereLight skyColor=\"blue\" intensity={0.4} />\n               <directionalLight\n                  position={[5, 5, 5]}\n                  intensity={2}\n                  color=\"orange\"\n                  shadow-mapSize-width={2048}\n                  shadow-mapSize-height={2048}\n                  shadow-camera-far={40}\n                  shadow-camera-near={0.1}\n                  shadow-camera-left={-2}\n                  shadow-camera-right={2}\n                  shadow-camera-top={2}\n                  shadow-camera-bottom={-2}\n                  castShadow\n               />\n            </group>\n\n            <group>\n               <Suspense\n                  fallback={\n                     <mesh scale={0.15} position={[-0.5, 1, 0]}>\n                        <textGeometry\n                           attach=\"geometry\"\n                           args={['Загрузка \\n модели', textOptions]}\n                        />\n                        <meshStandardMaterial attach=\"material\" />\n                     </mesh>\n                  }\n               >\n                  <Johnny />\n               </Suspense>\n               <mesh scale={200} position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow>\n                  <planeGeometry />\n                  <meshPhongMaterial color=\"gray\" />\n               </mesh>\n            </group>\n         </Canvas>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root'),\n)\n"],"sourceRoot":""}